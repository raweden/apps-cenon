{\rtf0\ansi{\fonttbl\f3\fnil Times-Roman;\f4\ftech Symbol;\f0\fswiss Helvetica;\f2\fmodern Courier;\f1\fmodern Ohlfs;}
\paperw16220
\paperh15760
\margl120
\margr0
{\colortbl;\red0\green0\blue0;}
\f3\b0\i0\ulnone\ql\fs24\fi0\li0\gray0\fc0\cf0\up0\dn0 Copyright 
\f4 ã
\f3 1992-2005 by vhf interservice GmbH.  All Rights Reserved.\
\

{\pard\tx3600\tx3980\tx4340\f0\b\fs56\li1500\fc0\cf0{\NeXTHelpMarker70 \markername NS_DEV_DOCFOR:objc_class:ButtonCell;}
,}\pard\tx3600\tx3980\tx4340\f0\b\i0\ulnone\fs56\li1500\fc0\cf0 GerberExport\

\f3\b0\fs80 \

\pard\tx4220\f0\b\fs28\fi-2720\li4220\fc0\cf0 Inherits From:	
\f3\b0 Object\

\fs20 \

\f0\b\fs28 Declared In:	
\f3\b0 GerberExport.h\

\fs20 \

\f0\b\fs52 \

\pard\fs36\fi-1020\li1200\fc0\cf0 Class Description\

\fs14\fi0\li1360 \

\pard\tx3600\tx3980\tx4340\f3\b0\fs28\li1500\fc0\cf0 The GerberExport class provides the programmatic interface to export the Gerber vector graphics format. The Gerber export is usually implemented via a sub class (ex GerberExportSub), which is implementing the methods needed to export the graphics data of a specific application.\
GerberExport's 
\b write
\b0  methods are used to write graphic elements to a data stream. The finished data stream is finally written to disk by using 
\b saveToFile:
\b0 . You can create a new GerberExport instance by sending the class an 
\b alloc
\b0  or 
\b new
\b0  method. You initialize an instance received from the alloc class method, by sending it an 
\b init
\b0  method.\

\pard\tx2480\tx2860\tx3240\fs14\li2100\fc0\cf0 \

\pard\tx3600\tx3980\tx4340\f2\fs24\li1500\fc1\cf1 \{   GerberExport  *gerberExport = [[GerberExport alloc] init];\
    NSPoint       p0, p1;\
    NSPoint       center, startPt, endPt;\
    NSSize	   rectSize;\
    float         width;\
    NSString      *fileName;\
    BOOL          mode = NO, ccw = YES;\
\
\
    [gerberExport writeCircleTool:width];\
\
    [gerberExport writeCircle:center];\
    [gerberExport writeLine:p0 :p1];\
    [gerberExport writeArc:center :startPt :endPt :ccw];\
\
    [gerberExport writeRectangleTool:width+rectSize.width :width+rectSize.height];\
    [gerberExport writeRectangle:origin];\
\
    [gerberExport writePolygonMode:mode];\
\
    [gerberExport saveToFile:fileName];\
    [gerberExport release];\
\}\

\f3\fs14 \

\fs28 The parameters in the example (p0, p1, center, startPt, endPt, angle, width, ccw, mode, fileName) have to be set as needed.\

\fs14 \

\fs28 For an actual example of implementation see the Cenon source codes (http://www.cenon.info). Take a look at the Classes GerberExport, GerberExportSub and Document.
\f2\fs24 \

\f3\fs14\fc0\cf0 \

\f0\b\fs56 \

\pard\fs36\fi-1020\li1200\fc0\cf0 Method Types\

\fs14\fi0\li1360 \

\pard\tx6080\tx11280\f3\b0\fs28\fi-4840\li6320\fc0\cf0 Creating an GerberExport	
\fc1\cf1 + alloc
\fc0\cf0 \
	
\f4\fc1\cf1 -
\f3  init
\fc0\cf0 \

\fs10\fc1\cf1 \

\pard\tx6080\tx11280\fs28\fi-4840\li6320\fc0\cf0 Export	
\f4\fc1\cf1 -
\f3\fc0\cf0  writeCircleTool:\

\f4 	-
\f3  
\fc1\cf1 writeRectangleTool:
\fc0\cf0 :\

\f4 	-
\f3  writeLine::\

\f4\fc1\cf1 	-
\f3\fc0\cf0  writeRectangle:\

\f4 	-
\f3  writeCircle:\

\f4 	-
\f3  
\fc1\cf1 writeArc
\fc0\cf0 ::::\

\f4 	-
\f3  writePolygonMode:\

\pard\tx6140\tx9660\tx10180\fs10\fi-4040\li6140\fc0\cf0 \

\pard\tx6080\tx11280\fs28\fi-4840\li6320\fc0\cf0 Writing to a file	
\f4 -
\f3  saveToFile:\

\pard\f0\b\fs70\li1360\fc0\cf0 \

\fs36\fi-1020\li1200 Instance Methods\

\fs14\fi0\li1360 \

\pard\tx1500\tx8260\f3\fs28\fi-520\li1500\fc0\cf0 init:
\f0 \

\pard\fs6\fi-380\li2480\fc0\cf0 \

\f3\b0\fs28\fi-620\li2520 - (self)
\b init
\b0 \

\pard\tx2480\tx2860\tx3240\fs14\li2100\fc0\cf0 \

\pard\tx3600\tx3980\tx4340\fs28\li1500\fc0\cf0 Initializes a newly created GerberExport object. The object provides an empty data stream, ready to be filled by using the addLayer and write methods.\

\fs14 \

\pard\tx2780\tx3280\tx3760\f0\b\fs24\fi-1300\li2800\fc1\cf1 See also:  -writeRectangle:, - writeArc::::, - writeCircle:, - writeLine::\

\pard\tx2480\tx2860\tx3240\f3\fs14\li2100\fc0\cf0 \

\pard\tx6080\tx11280\f0\fs52\fi-4840\li6320\fc1\cf1 \

\pard\tx1500\tx8260\f3\fs28\fi-520\li1500\fc0\cf0 writeCircleTool:
\f0 \

\pard\fs6\fi-380\li2480\fc0\cf0 \

\f3\b0\fs28\fi-620\li2520 - (void)
\b writeCircleTool
\b0\fc1\cf1 :(float)
\i dia
\i0\fc0\cf0 \

\pard\tx2480\tx2860\tx3240\fs14\li2100\fc0\cf0 \

\pard\tx3600\tx3980\tx4340\fs28\li1500\fc0\cf0 Sets the current tool in the output stream to a circle tool with diameter 
\i dia
\i0 .\

\fs14 \

\f0\b\fs24\fc1\cf1 See also:  
\f4\b0\fs28 -
\f0\b\fs24  writeRectangleTool:
\f3\b0\fs28\fc0\cf0 \

\fs14 \

\pard\tx6080\tx11280\f0\b\fs52\fi-4840\li6320\fc1\cf1 \

\pard\tx1500\tx8260\f3\fs28\fi-520\li1500\fc0\cf0 writeRectangleTool:
\f0 \

\pard\fs6\fi-380\li2480\fc0\cf0 \

\f3\b0\fs28\fi-760\li3240 - (void)
\b writeRectangleTool
\b0\fc1\cf1 :(float)
\i width 
\i0 :(float)
\i height
\i0\fc0\cf0 \

\pard\tx2480\tx2860\tx3240\fs14\li2100\fc0\cf0 \

\pard\tx3600\tx3980\tx4340\fs28\li1500\fc0\cf0 Sets the current tool in the output stream to a rectangle tool with width 
\i width 
\i0\fc1\cf1 and height
\i\fc0\cf0  height
\i0 .\

\fs14 \

\f0\b\fs24\fc1\cf1 See also:  
\f4\b0\fs28 -
\f0\b\fs24  writeCircleTool:
\f3\b0\fs28\fc0\cf0 \

\fs14 \

\pard\tx6080\tx11280\f0\b\fs52\fi-4840\li6320\fc1\cf1 \

\pard\tx1500\tx8260\f3\fs28\fi-520\li1500\fc0\cf0 writeLine::
\f0 \

\pard\fs6\fi-380\li2480\fc0\cf0 \

\f3\b0\fs28\fi-620\li2520 - (void)
\b writeLine:
\b0 (NSPoint)
\i startPt
\i0  
\b :
\b0 (NSPoint)
\i endPt
\i0 \

\fs14 \

\pard\tx3600\tx3980\tx4340\fs28\li1500\fc0\cf0 Adds a single line to the Gerber data stream. The line is defined by a start point 
\i startPt 
\i0\fc1\cf1 and 
\fc0\cf0 the end point 
\i endPt
\i0 .\

\fs14 \

\pard\tx2780\tx3280\tx3760\f0\b\fs24\fi-1300\li2800\fc1\cf1 See also:  
\f4\b0\fs28 -
\f0\b\fs24  writeArc::::, 
\f4\b0\fs28 -
\f0\b\fs24  writeCircle:, 
\f4\b0\fs28 -
\f0\b\fs24  writeRectangle:\

\pard\tx2480\tx2860\tx3240\f3\fs14\li2100\fc0\cf0 \

\pard\tx6080\tx11280\f0\fs52\fi-4840\li6320\fc0\cf0 \

\pard\tx1500\tx8260\f3\fs28\fi-520\li1500\fc0\cf0 writeArc::::
\f0 \

\pard\fs6\fi-380\li2480\fc0\cf0 \

\f3\b0\fs28\fi-620\li2520 - (void)
\b writeArc:
\b0 (NSPoint)
\i center
\i0  :(NSPoint)
\i startPt
\i0  
\b :
\b0 (NSPoint)
\i endPt 
\b\i0 :
\b0 (BOOL)
\i ccw
\i0 \

\fs14 \

\pard\tx3600\tx3980\tx4340\fs28\li1500\fc0\cf0 Adds a single arc to the Gerber data stream. The arc is defined with its 
\i center
\i0 , the start point 
\i startPt
\i0 , the end point 
\i endPt
\i0  and it's direction 
\i ccw.
\i0 \

\fs14 \

\pard\tx2780\tx3280\tx3760\f0\b\fs24\fi-1300\li2800\fc1\cf1 See also:  
\f4\b0\fs28 -
\f0\b\fs24  writeCircle:, 
\f4\b0\fs28 -
\f0\b\fs24  writeLine::, 
\f4\b0\fs28 -
\f0\b\fs24  writeRectangle:\

\pard\tx2480\tx2860\tx3240\f3\fs14\li2100\fc0\cf0 \

\pard\tx6080\tx11280\f0\fs52\fi-4840\li6320\fc1\cf1 \

{\pard\tx1500\tx8260\fs28\fi-520\li1500\fc0\cf0{\NeXTHelpMarker3158 \markername NS_DEV_DOCFOR:objc_method:[ButtonCell-altIcon];}
,}{\pard\tx1500\tx8260\f0\b\i0\ulnone\fs28\fi-520\li1500\fc0\cf0{\NeXTHelpMarker3159 \markername NS_DEV_DOCFOR:objc_method:[ButtonCell-altImage];}
,}{\pard\tx1500\tx8260\f0\b\i0\ulnone\fs28\fi-520\li1500\fc0\cf0{\NeXTHelpMarker3160 \markername NS_DEV_DOCFOR:objc_method:[ButtonCell-setIconPosition:];}
,}\pard\tx1500\tx8260\f3\b\i0\ulnone\fs28\fi-520\li1500\fc1\cf1 writeCircle
\f0\fc0\cf0 :\

\pard\fs6\fi-380\li2480\fc0\cf0 \

\f4\b0\fs28\fi-620\li2520 -
\f3  (void)
\b writeCircle:
\b0 (NSPoint)
\i center\

\i0\fs14 \

\pard\tx3600\tx3980\tx4340\fs28\li1500\fc0\cf0 Adds a circle to the Gerber data stream. The circle is defined with its 
\i center. 
\i0\fc1\cf1 The radius is given by the current tool.
\fc0\cf0 \

\fs14 \

\pard\tx2780\tx3280\tx3760\f0\b\fs24\fi-1300\li2800\fc1\cf1 See also:  
\f4\b0\fs28 -
\f0\b\fs24  writeArc::::, 
\f4\b0\fs28 -
\f0\b\fs24  writeLine::, 
\f4\b0\fs28 -
\f0\b\fs24  writeRectangle:\

\pard\tx2480\tx2860\tx3240\f3\b0\fs14\li2100\fc0\cf0 \

\pard\tx6080\tx11280\f0\b\fs52\fi-4840\li6320\fc0\cf0 \

{\pard\tx1500\tx8260\fs28\fi-520\li1500\fc0\cf0{\NeXTHelpMarker3396 \markername NS_DEV_DOCFOR:objc_method:[ButtonCell-altIcon];}
,}{\pard\tx1500\tx8260\f0\b\i0\ulnone\fs28\fi-520\li1500\fc0\cf0{\NeXTHelpMarker3397 \markername NS_DEV_DOCFOR:objc_method:[ButtonCell-altImage];}
,}{\pard\tx1500\tx8260\f0\b\i0\ulnone\fs28\fi-520\li1500\fc0\cf0{\NeXTHelpMarker3398 \markername NS_DEV_DOCFOR:objc_method:[ButtonCell-setIconPosition:];}
,}\pard\tx1500\tx8260\f3\b\i0\ulnone\fs28\fi-520\li1500\fc1\cf1 writeRectangle
\f0\fc0\cf0 :\

\pard\fs6\fi-380\li2480\fc0\cf0 \

\f4\b0\fs28\fi-620\li2520 -
\f3  (void)
\b writeRectangle:
\b0 (NSPoint)
\i origin\

\i0\fs14 \

\pard\tx3600\tx3980\tx4340\fs28\li1500\fc0\cf0 Adds a rectangle to the Gerber data stream. The rectangle is defined with its 
\i origin.
\i0\fc1\cf1  The width and height are given by the current tool.
\fc0\cf0 \

\fs14 \

\pard\tx2780\tx3280\tx3760\f0\b\fs24\fi-1300\li2800\fc1\cf1 See also:  
\f4\b0\fs28 -
\f0\b\fs24  writeArc::::, 
\f4\b0\fs28 -
\f0\b\fs24  writeLine::, 
\f4\b0\fs28 -
\f0\b\fs24  writeCircle:\

\pard\tx2480\tx2860\tx3240\f3\b0\fs14\li2100\fc0\cf0 \

\pard\tx6080\tx11280\f0\b\fs52\fi-4840\li6320\fc0\cf0 \

\pard\tx1500\tx8260\f3\fs28\fi-520\li1500\fc0\cf0 writePolygonMode:::
\f0 \

\pard\fs6\fi-380\li2480\fc0\cf0 \

\f3\b0\fs28\fi-620\li2520 - (void)
\b writePolyLineMode:
\b0 (BOOL)
\i mode
\i0 \

\fs14 \

\pard\tx3600\tx3980\tx4340\fs28\li1500\fc0\cf0 Adds a polygon to the Gerber data stream. A polygon is started by a call of this method with 
\i mode
\i0  = YES.\
Following this call any number of the methods writeLine, writeCircle, writeRectangle or writeArc may be called.\
After the polygon is completed, call this method again with 
\i mode
\i0  = NO, which will finish the output of the polygon.\

\pard\tx2480\tx2860\tx3240\fs14\li2100\fc0\cf0 \

\pard\tx2780\tx3280\tx3760\f0\b\fs24\fi-1300\li2800\fc1\cf1 See also:  
\f4\b0\fs28 -
\f0\b\fs24  writeCircle:, 
\f4\b0\fs28 -
\f0\b\fs24  writeLine::, 
\f4\b0\fs28 -
\f0\b\fs24  writeRectangle:, 
\f4\b0\fs28 -
\f0\b\fs24  writeArc::::\

\pard\tx2480\tx2860\tx3240\f3\fs14\li2100\fc0\cf0 \

\pard\tx6080\tx11280\f0\fs52\fi-4840\li6320\fc0\cf0 \

\pard\tx1500\tx8260\f3\fs28\fi-520\li1500\fc0\cf0 saveToFile:
\f0 \

\pard\fs6\fi-380\li2480\fc0\cf0 \

\f3\b0\fs28\fi-620\li2520 - (void)
\b saveToFile:
\b0 (NSString*)
\i filename
\i0 \

\fs14 \

\pard\tx3600\tx3980\tx4340\fs28\li1500\fc0\cf0 Writes the data stream to a Gerber file to the directory and name given in 
\i fileName
\i0 .\

\fs14 \

}
